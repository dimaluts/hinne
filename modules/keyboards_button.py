from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


from settings.users import if_user
from database import db

async def profile(message: types.Message):
    user_id = message.from_user.id

    if if_user(user_id, message):
        user = db(user_id)
        data = user.select_data('users')
        give_limit = data[6]
        give_max = data[8]
        kb = InlineKeyboardMarkup()
        if message.chat.type == 'private':
            kb.add(InlineKeyboardButton('–ü–æ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç', callback_data=f'{user_id}|hinne|limit'))
        await message.answer(f'<b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n'
                             f'üÜî: <code>{user_id}</code>\n'
                             f'üí∞ –ë–∞–ª–∞–Ω—Å: {user.hin} —Ö–∏–Ω\n'
                             f'üìä –£—Ä–æ–≤–µ–Ω—å: {user.lvl} ({user.xp}/{user.next_xp})\n'
                             f'–õ–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏: {give_limit}/{give_max} —Ö–∏–Ω', reply=message.message_id, reply_markup=kb)


async def games(message: types.Message):
    await message.answer('–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:\n'
                         '<code>–ë–æ–º–±—ã</code> {—Å—Ç–∞–≤–∫–∞}\n'
                         '<code>–•–æ—Ç–ª–∞–π–Ω</code> {—Å—Ç–∞–≤–∫–∞}')


async def razrabotka(message: types.Message):
    await message.answer('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!')


def register_button_handlers(dp: Dispatcher):
    dp.register_message_handler(games, Text(['üéÆ–∏–≥—Ä—ã'], ignore_case=True))
    dp.register_message_handler(profile, Text(
        ['üë§–ø—Ä–æ—Ñ–∏–ª—å', '–ø—Ä–æ—Ñ–∏–ª—å', '–ø', '–ø—Ä–æ—Ñ'], ignore_case=True))
    dp.register_message_handler(razrabotka, Text(
        ['—Ö–æ–≥–≤–∞—Ä—Ç—Å', '–∫–æ–º–∞–Ω–¥—ã', '–¥–æ–Ω–∞—Ç', '—á–∞—Ç—ã', '–∫–ª–∞–Ω—ã', '–ø–æ–º–æ—â—å', '—è–∑—ã–∫'], ignore_case=True))
